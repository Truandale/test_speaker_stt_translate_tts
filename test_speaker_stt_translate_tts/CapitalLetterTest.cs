using System;
using System.Diagnostics;

namespace test_speaker_stt_translate_tts
{
    /// <summary>
    /// Быстрая демонстрация улучшенного фильтра с проверкой заглавных букв
    /// </summary>
    public static class CapitalLetterTest
    {
        public static void RunCapitalLetterDemo()
        {
            Debug.WriteLine("=== ДЕМОНСТРАЦИЯ: ЗАГЛАВНЫЕ БУКВЫ В НАЧАЛЕ ПРЕДЛОЖЕНИЙ ===");
            Debug.WriteLine("");

            // Примеры из ваших логов, которые теперь будут правильно обработаны
            var realWorldExamples = new[]
            {
                // Проблемные фразы из ваших логов (теперь будут отфильтрованы)
                ("what we do", "❌ Будет отфильтрован: маленькая буква + без точки"),
                ("this is a Apple X for Cogging", "❌ Будет отфильтрован: маленькая буква + без точки"),
                ("и это не человеческая речь", "❌ Будет отфильтрован: маленькая буква + без точки"),
                ("в будущем", "❌ Будет отфильтрован: маленькая буква + без точки"),

                // Правильные варианты (будут приняты)
                ("What we do?", "✅ Будет принят: заглавная + вопросительный знак"),
                ("This is a Apple X for Cogging.", "✅ Будет принят: заглавная + точка"),
                ("И это не человеческая речь.", "✅ Будет принят: заглавная + точка"),
                ("В будущем.", "✅ Будет принят: заглавная + точка"),

                // Сложные случаи с кавычками и скобками
                ("«Сегодня хороший день».", "✅ Кавычки + заглавная + точка"),
                ("(Важная информация)!", "✅ Скобки + заглавная + восклицательный"),
                ("— Поехали домой.", "✅ Тире + заглавная + точка"),
                ("…Но он все-таки пришел.", "✅ Многоточие + заглавная + точка"),

                // Исключения для брендов и символов
                ("iPhone работает отлично.", "✅ Разрешенный бренд + точка"),
                ("eBay — популярная площадка.", "✅ Разрешенный бренд + тире + точка"),
                ("5 минут назад случилось это.", "✅ Цифра в начале + точка"),
                ("@пользователь, ответьте.", "✅ Символ @ + точка"),
                ("$100 — это дорого.", "✅ Символ $ + тире + точка"),
            };

            foreach (var (phrase, expectedResult) in realWorldExamples)
            {
                bool isValid = AdvancedSpeechFilter.IsValidSpeechQuick(phrase);
                bool isIncomplete = AdvancedSpeechFilter.IsIncompletePhrase(phrase);
                
                string actualResult = isValid ? "✅ ПРИНЯТ" : "❌ ОТКЛОНЕН";
                string reason = !isValid ? 
                    (isIncomplete ? " (незавершенная фраза)" : " (другая причина)") : 
                    "";
                
                Debug.WriteLine($"{actualResult}{reason}: '{phrase}'");
                Debug.WriteLine($"   Ожидалось: {expectedResult}");
                Debug.WriteLine("");
            }
            
            Debug.WriteLine("=== КОНЕЦ ДЕМОНСТРАЦИИ ===");
        }
    }
}